name: Build and Publish APK

env:
  PROJECT_MODULE: app
  RELEASE_TITLE: New Build

on:
  push:
    branches: [ "Max" ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Set Gradle Wrapper executable permissions
        run: chmod +x ./gradlew

      - name: Build APK Release
        run: ./gradlew :${{ env.PROJECT_MODULE }}:assembleRelease

      - name: Create GitHub Release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: release } = await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${{ github.run_number }}`,
              name: `${{ env.RELEASE_TITLE }} - v${{ github.run_number }}`,
              draft: false,
              prerelease: false,
              token: process.env.TKT,
            });
            core.setOutput('upload_url', release.upload_url);

      - name: Upload APK to Release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const upload_url = core.getInput('upload_url', { required: true });
            const apkPath = path.join(process.env.PROJECT_MODULE, 'build/outputs/apk/release/app-release.apk');
            const content = fs.readFileSync(apkPath);
            const headers = {
              'content-length': content.length,
              'content-type': 'application/vnd.android.package-archive'
            };

            await github.repos.uploadReleaseAsset({
              url: upload_url,
              headers,
              name: 'app-release.apk',
              file: content,
              token: process.env.TKT,
            });
        env:
          PROJECT_MODULE: ${{ env.PROJECT_MODULE }}
